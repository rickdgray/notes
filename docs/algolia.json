[{"content":"General Syntax Microsoft encourages the use of var. They\u0026amp;rsquo;ve gone back and forth on this a few times, but I think they\u0026amp;rsquo;ve settled on var for good now.\nKnow null conditional operators and the null coalescing operator too.\nClasses are nullable by default; primitives are not. You can make primitives nullable using the ?.\nbool? nullableBool; If you don\u0026amp;rsquo;t want your classes to be nullable by default, you can set that option in the .csproj file.\n\u0026amp;lt;Nullable\u0026amp;gt;enable\u0026amp;lt;/Nullable\u0026amp;gt; You can set default parameters on methods by just using an equal sign:\nvoid add(int i, int j = 1); Don\u0026amp;rsquo;t use + to combine strings; it\u0026amp;rsquo;s gross. Don\u0026amp;rsquo;t use composite strings either. Use interpolation. See examples here.\nTo convert from string to something, use .TryParse(). It returns a bool and has an out parameter that you must pass by reference for the parser to populate.\nvar a = \u0026amp;#34;1\u0026amp;#34;; if (int.TryParse(a, out int number)) return number; The DateTime and TimeSpan classes are amazing.\nCollections List, Dictionary (C# version of hashmaps), and other collections implement IEnumberable. It allows for the use of foreach and other things. It does not have a .Count for tracking iteration however; it\u0026amp;rsquo;s meant to be used declaratively. Use a for loop instead for that.\nUnlike most languages, Dictionary throws an exception if the key isn\u0026amp;rsquo;t found so be sure to check with .ContainsKey(key).\nClasses Know the difference between a field and a property. See examples here.\nYou can instantiate properties of a class at the same time you declare the class itself. You don\u0026amp;rsquo;t even need the parenthesis:\nvar dude = new Person { Name = \u0026amp;#34;Jake\u0026amp;#34; }; Concurrency async, await, and Task are crucial to know and very easy to use.\nActions and Functions are formalized delegates. In other words, they are classes used to construct callbacks or promises. You can make your own delegate manually if you like but it\u0026amp;rsquo;s a really deep and complicated topic. Don\u0026amp;rsquo;t …","date":-62135596800,"description":"","objectID":"9645c966deb1340d2649ef2fdbf92231","permalink":"https://rickdgray.github.io/notes/dev/csharp-for-newbies/","title":"C# For Newbies"},{"content":"I\u0026amp;rsquo;m tired of having to look up simple things that I can\u0026amp;rsquo;t immediately remember.\nConfiguration Given this example appsettings.json\n{ \u0026amp;#34;Position\u0026amp;#34;: { \u0026amp;#34;Title\u0026amp;#34;: \u0026amp;#34;Editor\u0026amp;#34;, \u0026amp;#34;Name\u0026amp;#34;: \u0026amp;#34;Joe Smith\u0026amp;#34; } } Access in Program/Startup Accessing configuration info in builder\nvar test = builder.Configuration[\u0026amp;#34;Position:Title\u0026amp;#34;]; Console.Writeline(test); IOptions Pattern Matching class\npublic class PositionOptions { public const string Name = \u0026amp;#34;Position\u0026amp;#34;; public string Title { get; set; } = String.Empty; public string Name { get; set; } = String.Empty; } binding in program.cs\nbuilder.Services.Configure\u0026amp;lt;PositionOptions\u0026amp;gt;( builder.Configuration.GetSection(PositionOptions.Name)); dependency injection\nprivate readonly PositionOptions _positionOptions; public MyController(IOptions\u0026amp;lt;PositionOptions\u0026amp;gt; positionOptions) { _positionOptions = positionOptions.Value; } Date and Time // Declare specific date and time var d = new DateTime(2023, 2, 8, 10, 00, 00).AddDays(120); // Date only var c = new DateOnly(2023, 6, 8); Console.WriteLine(c.AddDays(-30).ToShortDateString()); // Parse from ISO DateTime.ParseExact(\u0026amp;#34;2023-04-14T15:24:22.3552219-05:00\u0026amp;#34;, \u0026amp;#34;o\u0026amp;#34;, CultureInfo.InvariantCulture); // Print ISO Console.WriteLine(b.ToString(\u0026amp;#34;F\u0026amp;#34;)); // Few ways to get string of month; 13th month is blank string. There is no enum. CultureInfo.CurrentCulture.DateTimeFormat.MonthNames.First(); CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(DateTime.Now.Month); DateTimeFormatInfo.CurrentInfo.MonthNames.First(); DateTimeFormatInfo.CurrentInfo.GetMonthName(DateTime.Now.Month); // Day of week enum System.DayOfWeek.Monday [!Leap year bug] This will throw an exception when a leap day comes around! var nextYear = new DateTime(current.Year + 1, current.Month, current.Day); Be sure to instead use the built in method. var nextYear = current.AddYears(1);\nTime Zone // TBD? Probably just use nodatime File I/O Read Entire File var …","date":-62135596800,"description":"","objectID":"a9afbc6472cae3cae9acfbcf7233f6da","permalink":"https://rickdgray.github.io/notes/dev/csharp/","title":"C# Cheatsheet"},{"content":" GPL My default choice. All derivatives must also have the same license! Prevents blatant theft of your work. MIT \u0026amp;amp; BSD \u0026amp;amp; ISC Go crazy; no rules Apache 2 Use the code commercially: Companies can include the licensed code in proprietary software that they then sell to customers. Alter the code: Developers are permitted to make modifications to the original code. Distribute any copies or modifications of the code: An individual or organization is allowed to copy and/or update the code, then make that version available to others (even commercially). Sublicense the code: A company can distribute their reworked version of the code under a stronger license. Use patent claims: Under the terms of the Apache License 2.0, contributors to the code explicitly grant patent rights to users (although experts believe that the language of other permissive licenses also grants such rights). Place warranty: Users of the open source code can place a warranty on the licensed software. ","date":-62135596800,"description":"","objectID":"5e7bd546779be8b441046ced80a09e71","permalink":"https://rickdgray.github.io/notes/dev/choose-a-license/","title":"Choose a License"},{"content":"DB Backup PowerShell script for automating the creation of new databases in a local environment setting.\n#Requires -RunAsAdministrator # If SqlServer module isn\u0026amp;#39;t installed if (!(Get-module SqlServer)) { Write-Host \u0026amp;#34;Installing SqlServer module...\u0026amp;#34; Install-Module SqlServer } Write-Host \u0026amp;#34;Loading SqlServer module...\u0026amp;#34; Import-Module SqlServer $localServer = \u0026amp;#34;(localdb)\\MSSQLLocalDB\u0026amp;#34; Write-Host \u0026amp;#34;Select database to copy:\u0026amp;#34; $database = Get-SqlDatabase -ServerInstance $localServer | Where-Object { $_.Owner -ne \u0026amp;#34;sa\u0026amp;#34; } | Out-GridView -Title \u0026amp;#34;Select database to copy\u0026amp;#34; -PassThru if ($database -eq $null) { Write-Error \u0026amp;#34;A database was not selected.\u0026amp;#34; exit 1; } $databaseName = $database.Name $newDatabaseName = Read-Host -Prompt \u0026amp;#34;Enter name of new database [${databaseName}_Copy]\u0026amp;#34; if (-not [bool]$newDatabaseName) { $newDatabaseName = \u0026amp;#34;${databaseName}_Copy\u0026amp;#34; } # Check if name already exists Get-SqlDatabase -ServerInstance $localServer | ForEach-Object -Process { if ($_.Name -eq $newDatabaseName) { Write-Error \u0026amp;#34;Database $newDatabaseName already exists.\u0026amp;#34; exit 1; } } Write-Host \u0026amp;#34;Creating $newDatabaseName on $localServer...\u0026amp;#34; $server = New-Object Microsoft.SqlServer.Management.Smo.Server($localServer) $newDatabase = New-Object Microsoft.SqlServer.Management.Smo.Database($server, $newDatabaseName) $newDatabase.Create() Write-Host \u0026amp;#34;Backing up $databaseName to ${HOME}\\${databaseName}.bak...\u0026amp;#34; if (Test-Path \u0026amp;#34;${HOME}\\${databaseName}.bak\u0026amp;#34; -PathType Leaf) { Rename-Item -Path \u0026amp;#34;${HOME}\\${databaseName}.bak\u0026amp;#34; -NewName \u0026amp;#34;${databaseName}.old.bak\u0026amp;#34; } Backup-SqlDatabase -ServerInstance $localServer -Database $databaseName -BackupFile \u0026amp;#34;${HOME}\\${databaseName}.bak\u0026amp;#34; if ((Test-Path \u0026amp;#34;${HOME}\\${databaseName}.bak\u0026amp;#34; -PathType Leaf) -and (Test-Path \u0026amp;#34;${HOME}\\${databaseName}.old.bak\u0026amp;#34; -PathType Leaf)) { Remove-Item -Path \u0026amp;#34;${HOME}\\${databaseName}.old.bak\u0026amp;#34; } # Read backup …","date":-62135596800,"description":"","objectID":"f5b7aa22ef1dc0fc257e317665adec1c","permalink":"https://rickdgray.github.io/notes/dev/db-migrations/","title":"DB Migrations"},{"content":"Obsidian Setup git config --global --add safe.directory C:/Users/rickd/Source/Repos/Obsidian [!Windows-style backslashes will not work] If you run the above command by pasting the windows directory, you will need to edit the global .gitconfig file. It is in the user\u0026amp;rsquo;s home directory. You can quickly open it with git config --global -e to fix the slashes.\nForce GPG Login echo \u0026amp;#34;test\u0026amp;#34; | gpg --clearsign Gitflow To review: https://jeffkreeftmeijer.com/git-flow/ https://nvie.com/posts/a-successful-git-branching-model/\nCommon Commands Alias Command g git ga git add gaa git add \u0026amp;ndash;all gapa git add \u0026amp;ndash;patch gau git add \u0026amp;ndash;update gav git add \u0026amp;ndash;verbose gap git apply gapt git apply \u0026amp;ndash;3way gb git branch gba git branch \u0026amp;ndash;all gbd git branch \u0026amp;ndash;delete gbda git branch \u0026amp;ndash;no-color \u0026amp;ndash;merged | grep -vE \u0026amp;ldquo;^([+]|\\s($(git_main_branch)|$(git_develop_branch))\\s*$)\u0026amp;rdquo; | xargs git branch \u0026amp;ndash;delete 2\u0026amp;gt;/dev/null gbD git branch \u0026amp;ndash;delete \u0026amp;ndash;force gbg git branch -vv gbgd local res=$(git branch -vv gbgD local res=$(git branch -vv gbl git blame -b -w gbnm git branch \u0026amp;ndash;no-merged gbr git branch \u0026amp;ndash;remote gbs git bisect gbsb git bisect bad gbsg git bisect good gbsr git bisect reset gbss git bisect start gc git commit \u0026amp;ndash;verbose gc! git commit \u0026amp;ndash;verbose \u0026amp;ndash;amend gcn! git commit \u0026amp;ndash;verbose \u0026amp;ndash;no-edit \u0026amp;ndash;amend gca git commit \u0026amp;ndash;verbose \u0026amp;ndash;all gca! git commit \u0026amp;ndash;verbose \u0026amp;ndash;all \u0026amp;ndash;amend gcan! git commit \u0026amp;ndash;verbose \u0026amp;ndash;all \u0026amp;ndash;no-edit \u0026amp;ndash;amend gcans! git commit \u0026amp;ndash;verbose \u0026amp;ndash;all \u0026amp;ndash;signoff \u0026amp;ndash;no-edit \u0026amp;ndash;amend gcam git commit \u0026amp;ndash;all \u0026amp;ndash;message gcas git commit \u0026amp;ndash;all \u0026amp;ndash;signoff gcasm git commit \u0026amp;ndash;all \u0026amp;ndash;signoff \u0026amp;ndash;message gcsm git commit \u0026amp;ndash;signoff \u0026amp;ndash;message gcb git checkout -b gcf git config \u0026amp;ndash;list gcl git clone \u0026amp;ndash;recurse-submodules gccd git clone \u0026amp;ndash;recurse-submodules \u0026amp;ldquo;$@\u0026amp;rdquo; …","date":-62135596800,"description":"","objectID":"ec33962143f4d8b06c99ceb1f23f92f7","permalink":"https://rickdgray.github.io/notes/dev/git/","title":"Git"},{"content":"THIS NEEDS FORMATTING\nIntroduction Don\u0026amp;rsquo;t skip this section. It may be boring, but it will give you the background and reason why I say certain things later. This article is written for platter drives, although much, but not all, applies to the SSD drives too. There are surprisingly very few studies published on platter drive failures. Google did one, Backblaze has made several informative blog posts, and there was one published on usenix. But that\u0026amp;rsquo;s it other than some scattered forum postings. If there are any good studies on SSD drives, they are well hidden. What I have seen is mostly anecdotal stories which say, unlike plater drives, SSD drives tend to just up and die without warning. Firmware issues are responsible for some of those failures. I could find nothing on hybrid drives. S.M.A.R.T All modern drives have built in software built right into the drive\u0026amp;rsquo;s firmware for monitoring their health, known as Self-Monitoring, Analysis, and Reporting Technology system, or SMART for short. It is designed to monitor the health and performance of the hard drive and help predict impending failure. It\u0026amp;rsquo;s also arguably the best tool for the job currently available. However, it is far from perfect. Google\u0026amp;rsquo;s mammoth hard drive study found about 40% of the failed drives had no indicators from SMART that the drive was bad1. Still a 60-63% chance of detecting a bad drive beats everything else out there and is therefore widely used. Technically, SMART is an optional part of the ATA standard, and some USB devices do not support SMART. Virtual disks do not support SMART either, although the physical disk(s) they are hosted on will. Hardware RAID controller support is hit or miss, although software RAID controllers generally do support SMART. SMART tools may not work on SCSI or SAS drives since they may not use ATA command sets. Sectors A sector is just a set number of bytes on the hard drive. The hard drive will have two types of sectors and it is easy …","date":-62135596800,"description":"","objectID":"d7a0610b0c9fdcaf9d375a651ad4cc47","permalink":"https://rickdgray.github.io/notes/dev/hard-drive-testing/","title":"HDD Testing"},{"content":"Subnet Mask More info here\nAddresses Hosts Netmask Amount of a Class C /30 4 2 255.255.255.252 /29 8 6 255.255.255.248 /28 16 14 255.255.255.240 /27 32 30 255.255.255.224 /26 64 62 255.255.255.192 /25 128 126 255.255.255.128 /24 256 254 255.255.255.0 /23 512 510 255.255.254.0 /22 1024 1022 255.255.252.0 /21 2048 2046 255.255.248.0 /20 4096 4094 255.255.240.0 /19 8192 8190 255.255.224.0 /18 16384 16382 255.255.192.0 /17 32768 32766 255.255.128.0 /16 65536 65534 255.255.0.0 If you take an ip address, 192.168.0.1, and write it in decimal, you get 3232235777.\nIn fact, the range of ip addresses in decimal is 0 through 4294967295. Does that number look familiar? It should. It\u0026amp;rsquo;s the max value for a 32 bit unsigned number.\nNow, imagine a binary tree. The root node represents ip addresses 0 through 4294967295, or 0.0.0.0 through 255.255.255.255. It is at level 0 of the binary tree. If we were to label the root node of the binary tree, we use the lower ip address, and the level of the binary tree. 0.0.0.0/0.\nNext level of the binary tree. The left node represents 0.0.0.0 through 127.255.255.255. We label that node 0.0.0.0/1. The right node represents 128.0.0.0 through 255.255.255.255. We label that node 128.0.0.0/1. Again, all the 1 represents is which level of the binary tree you\u0026amp;rsquo;re on.\nSo, you can imagine that 0.0.0.0/1\u0026amp;rsquo;s children will be 0.0.0.0/2 and 64.0.0.0/2. And so on.\nAt the last level of the binary tree (33), each node represents a single ip address.\nTL;DR: The entire IPv4 address space is represented via a binary tree. An IP address in CIDR notation is nothing more than the low address, and the level of the binary tree.\nAnd, IPv6 addresses work exactly the same way.\nTODO: represent as a graph\n","date":-62135596800,"description":"","objectID":"b27a81b4e2fd03566bbe05e41c93dcfd","permalink":"https://rickdgray.github.io/notes/dev/networking/","title":"Networking"},{"content":" 7-zip git obsidian notepad++ ubuntu wsl paint.net sumatrapdf discord vlc vs vs code firefox obs steam office powershell ","date":-62135596800,"description":"","objectID":"7685720d4a8d143062539031d070e9dd","permalink":"https://rickdgray.github.io/notes/dev/new-pc/","title":"New PC"},{"content":"Old script to generate certificate\n#create ca key openssl genrsa -out ca.key 4096 #create ca openssl req -new -x509 -days 365 -key ca.key -out ca.cert.pem -config .\\openssl-custom.cnf #create server key (private key) openssl genrsa -out server.key 4096 #create server certificate signing request (csr) openssl req -new -key server.key -out server.csr -config .\\openssl-custom.cnf #create certificate (public key) openssl x509 -req -days 365 -in server.csr -CA ca.cert.pem -CAkey ca.key -CAcreateserial -out server.crt rm ca.cert.pem rm ca.cert.srl rm ca.key rm server.csr Write-Host \u0026amp;#34;\u0026amp;gt;\u0026amp;gt;\u0026amp;gt;Import server.crt into your browser under the certificate authorities category.\u0026amp;#34; Write-Host \u0026amp;#34;\u0026amp;gt;\u0026amp;gt;\u0026amp;gt;In Firefox, you will need to go to about:config and set security.enterprise_roots.enabled to true\u0026amp;#34; ","date":-62135596800,"description":"","objectID":"232c49268224f1d267399bc67410cd78","permalink":"https://rickdgray.github.io/notes/dev/ssl-certs/","title":"SSL Certs"},{"content":"Object Oriented Programming [!Inheritance Sucks] Composition is better than inheritance\nBackend for Frontend (BFF) https://learn.microsoft.com/en-us/azure/architecture/patterns/backends-for-frontends\n","date":-62135596800,"description":"","objectID":"b12b864dd81cd335d271e8eb1d14fbce","permalink":"https://rickdgray.github.io/notes/dev/software-engineering/","title":"Software Engineering"},{"content":"Set Permissions Recursive sudo chown -R www-data:www-data ./* sudo find . -type d -exec chmod 0755 {} \\; sudo find . -type f -exec chmod 0644 {} \\; sudo systemctl restart apache2.service Certbot Plugin Does not work with the redirect to github I have in place right now.\nsudo certbot --nginx -d rickdgray.com -d www.rickdgray.com -d dev.rickdgray.com -d coder.rickdgray.com -d guac.rickdgray.com -d jambot.rickdgray.com -d nextcloud.rickdgray.com -d speedtest.rickdgray.com Manual sudo certbot certonly --manual -d rickdgray.com -d www.rickdgray.com -d dev.rickdgray.com -d coder.rickdgray.com -d guac.rickdgray.com -d jambot.rickdgray.com -d nextcloud.rickdgray.com -d speedtest.rickdgray.com --agree-tos --no-bootstrap --manual-public-ip-logging-ok --preferred-challenges dns-01 --server https://acme-v02.api.letsencrypt.org/directory Ubuntu Disable cloud-init sudo touch /etc/cloud/cloud-init.disabled nginx Enable site sudo ln -s /etc/nginx/sites-available/www.example.org.conf /etc/nginx/sites-enabled/ sudo systemctl restart nginx.service Open port Ubuntu uses \u0026amp;ldquo;uncomplicated fire wall\u0026amp;rdquo; or UFW\nsudo ufw allow 1701 # for more granularity ufw allow 11200:11299/tcp ufw allow 11200:11299/udp # to do a quick test with netcat nc -l 1701 # then use telnet from windows and send a message ","date":-62135596800,"description":"","objectID":"254d483ad8be7e2f1b2c2b388697029d","permalink":"https://rickdgray.github.io/notes/dev/system-admin/","title":"System Admin"},{"content":"Windows Microsoft.PowerShell_profile.ps1 Import-Module posh-git oh-my-posh init pwsh --config \u0026amp;#34;~/Documents/PowerShell/theme.omp.json\u0026amp;#34; | Invoke-Expression function repos { \u0026amp;amp; cd ~/source/repos } function edit { param ( $Filename ) \u0026amp;amp; \u0026amp;#34;C:/Program Files/Notepad++/notepad++.exe\u0026amp;#34; $Filename } function which { param ( $Command ) if ($PSBoundParameters.ContainsKey(\u0026amp;#39;Command\u0026amp;#39;)) { Write-Host (Get-Module (Get-Command $Command).Source).Path } } clear Generate theme $alignment = \u0026amp;#39;left\u0026amp;#39; $textColorPrimary = \u0026amp;#39;#ffffff\u0026amp;#39; $textColorSecondary = \u0026amp;#39;#ff0000\u0026amp;#39; $style = \u0026amp;#39;plain\u0026amp;#39; $type = \u0026amp;#39;prompt\u0026amp;#39; $username = @{ \u0026amp;#39;foreground\u0026amp;#39; = $textColorPrimary \u0026amp;#39;style\u0026amp;#39; = $style \u0026amp;#39;template\u0026amp;#39; = \u0026amp;#34;\u0026amp;lt;$textColorSecondary\u0026amp;gt;┏[\u0026amp;lt;/\u0026amp;gt;{{ .UserName }}\u0026amp;lt;$textColorSecondary\u0026amp;gt;]\u0026amp;lt;/\u0026amp;gt;\u0026amp;#34; \u0026amp;#39;type\u0026amp;#39; = \u0026amp;#39;session\u0026amp;#39; } $git = @{ \u0026amp;#39;foreground\u0026amp;#39; = $textColorPrimary \u0026amp;#39;style\u0026amp;#39; = $style \u0026amp;#39;template\u0026amp;#39; = \u0026amp;#34;\u0026amp;lt;$textColorSecondary\u0026amp;gt;[\u0026amp;lt;/\u0026amp;gt;{{ .HEAD }}\u0026amp;lt;$textColorSecondary\u0026amp;gt;]\u0026amp;lt;/\u0026amp;gt;\u0026amp;#34; \u0026amp;#39;type\u0026amp;#39; = \u0026amp;#39;git\u0026amp;#39; } $root = @{ \u0026amp;#39;foreground\u0026amp;#39; = $textColorPrimary \u0026amp;#39;style\u0026amp;#39; = $style \u0026amp;#39;template\u0026amp;#39; = \u0026amp;#34;\u0026amp;lt;$textColorSecondary\u0026amp;gt;[\u0026amp;lt;/\u0026amp;gt;⚡\u0026amp;lt;$textColorSecondary\u0026amp;gt;]\u0026amp;lt;/\u0026amp;gt;\u0026amp;#34; \u0026amp;#39;type\u0026amp;#39; = \u0026amp;#39;root\u0026amp;#39; } $exitCode = @{ \u0026amp;#39;foreground\u0026amp;#39; = $textColorPrimary \u0026amp;#39;style\u0026amp;#39; = $style \u0026amp;#39;template\u0026amp;#39; = \u0026amp;#34;\u0026amp;lt;$textColorSecondary\u0026amp;gt;[x\u0026amp;lt;/\u0026amp;gt;{{ .Meaning }}\u0026amp;lt;$textColorSecondary\u0026amp;gt;]\u0026amp;lt;/\u0026amp;gt;\u0026amp;#34; \u0026amp;#39;type\u0026amp;#39; = \u0026amp;#39;exit\u0026amp;#39; } $path = @{ \u0026amp;#39;foreground\u0026amp;#39; = $textColorPrimary \u0026amp;#39;style\u0026amp;#39; = $style \u0026amp;#39;template\u0026amp;#39; = \u0026amp;#34;\u0026amp;lt;$textColorSecondary\u0026amp;gt;┖[\u0026amp;lt;/\u0026amp;gt;{{ .Path }}\u0026amp;lt;$textColorSecondary\u0026amp;gt;]\u0026amp;gt;\u0026amp;lt;/\u0026amp;gt;\u0026amp;#34; \u0026amp;#39;type\u0026amp;#39; = \u0026amp;#39;path\u0026amp;#39; \u0026amp;#39;properties\u0026amp;#39; = @{ \u0026amp;#39;style\u0026amp;#39; = \u0026amp;#39;full\u0026amp;#39; } } $firstLine = @{ \u0026amp;#39;alignment\u0026amp;#39; = $alignment \u0026amp;#39;segments\u0026amp;#39; = @( $username, $git, $root, $exitCode ) \u0026amp;#39;type\u0026amp;#39; = $type } …","date":-62135596800,"description":"","objectID":"21242d30de74f21425dc57419f8a80ac","permalink":"https://rickdgray.github.io/notes/dev/terminal/","title":"Terminal"},{"content":"flowchart TD 1[1-3] 4A[4A-5A] 4M[4M-7M] 10F[10] 11F[11] 12[12-14] 15[15-18] 19[19-21] 19A[19-21] 19S[19-21] A[Unlock Grit] B[Unlock Sonja] C[Unlock Drake] D[Unlock Eagle] E[Unlock Kanbei] F[Unlock Nell] G[Unlock Sturm] X[Unlock all COs] Z[Advance Campaign Clear] 1 --\u0026amp;gt;|Andy Branch| 4A 1 --\u0026amp;gt;|Max Branch| 4M 4A --\u0026amp;gt; 6A 6A --\u0026amp;gt;|HQ Cap| 8 6A --\u0026amp;gt;|Rout| 7A 4M --\u0026amp;gt; A 7A --\u0026amp;gt; 8 A --\u0026amp;gt; 8 8 --\u0026amp;gt; 9 9 --\u0026amp;gt; 10 9 --\u0026amp;gt;|Clear in 8 days or less| 10F 10 --\u0026amp;gt; 11 10F --\u0026amp;gt; 11 10F --\u0026amp;gt;|Clear in 10 days or less| 11F 11 --\u0026amp;gt; 15 11F --\u0026amp;gt; 15 11F --\u0026amp;gt;|Clear in 12 days or less| 12 12 --\u0026amp;gt; B B --\u0026amp;gt; 15 15 --\u0026amp;gt;|Only use Andy| 19A 15 --\u0026amp;gt;|Only use Sami| 19S 15 --\u0026amp;gt; 19 19A --\u0026amp;gt; C 19S --\u0026amp;gt; 22 22 --\u0026amp;gt; D 19 \u0026amp;amp; C \u0026amp;amp; D --\u0026amp;gt; E X --\u0026amp;gt; G G \u0026amp;amp; Z --\u0026amp;gt; F style A stroke:#69a2ff,stroke-width:3px style B stroke:#69a2ff,stroke-width:3px style C stroke:#69a2ff,stroke-width:3px style D stroke:#69a2ff,stroke-width:3px style E stroke:#69a2ff,stroke-width:3px style F stroke:#69a2ff,stroke-width:3px style G stroke:#69a2ff,stroke-width:3px style 7A stroke:#ff696e,stroke-width:3px style 12 stroke:#ff696e,stroke-width:3px style 22 stroke:#ff696e,stroke-width:3px ","date":-62135596800,"description":"","objectID":"5c0e4752cbde2635af0bb4a482b559d7","permalink":"https://rickdgray.github.io/notes/games/advance-wars/","title":"Advance Wars"},{"content":"October is the best month leif erikson day pumpkin pie halloween fall weather start of colder weather throughout the year begining of the holidays autumn colors for clothing colder clothes look better able to skate and do other outside things candy greenery takes a change of color horror movies/games haunted houses game releases gets dark earlier; can do night things under stars gets light earlier; easier to wake up hot chocolate/roasted marshmallows ","date":-62135596800,"description":"","objectID":"f2913eddec50b1fd97d5baa663b37b06","permalink":"https://rickdgray.github.io/notes/other/october/","title":"October"},{"content":"Rick\u0026amp;rsquo;s Notes Hello! These are my notes and things. Feel free to peruse; I hope something is useful to you. I recommended checking these out:\nCSharp Git ","date":-62135596800,"description":"","objectID":"3976528693a0108357f4928017600865","permalink":"https://rickdgray.github.io/notes/","title":"README"}]